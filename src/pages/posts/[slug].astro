---
export const prerender = true
import { Marked } from 'marked';
import { markedHighlight } from 'marked-highlight';
import Prism from 'prismjs'
import loadLanguages from 'prismjs/components/';
loadLanguages(['py', 'ts']); // TODO: get these values from a remote config

import Layout from "@/layouts/Layout.astro";
import fetchApi from "@/lib/fetch-api";
import type Post from "@/interfaces/post";

import formatDate from "@/utils/formatDate";

export async function getStaticPaths() {
  const posts = await fetchApi<Post[]>({
    endpoint: 'posts',
    wrappedByKey: 'data',
  });

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = Post;

const post = Astro.props;
const marked = new Marked(
  markedHighlight({
    langPrefix: 'language-',
    highlight(code, lang) {
      return Prism.highlight(code, Prism.languages[lang], lang);
    }
  })
);
const articleContent = marked.parse(post.content)
---

<Layout title={post.title} description={post.description}>
  <main class="post mx-auto flex w-full max-w-prose flex-col gap-4">
    <header role="presentation">
      <h1 class="text-md">
        {post.title} - {formatDate(new Date(post.published_at))}
      </h1>
      <p class="italic">{post.description}</p>
    </header>

    <article set:html={articleContent} />
  </main>
</Layout>
