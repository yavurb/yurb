---
import { Image } from "astro:assets"
import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import profilePicture from "@/assets/profile.png";

import presentation from "@/data/presentation";

import fetchApi from "@/lib/fetch-api";
import type Post from "@/interfaces/post";
import type Projects from "@/interfaces/projects";

const posts = await fetchApi<Post[]>({
  endpoint: 'posts',
  wrappedByKey: 'data',
  query: {
    sort: ['publishedAt:desc'],
    pagination: {
      page: 1,
      pageSize: 2
    }
  }
});

const projects = await fetchApi<Projects[]>({
  endpoint: 'projects',
  wrappedByKey: 'data',
  query: {
    sort: ['publishedAt:desc'],
    pagination: {
      page: 1,
      pageSize: 2
    }
  }
});
---

<Layout>
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-end md:gap-12"
    >
      <Image
        src={profilePicture}
        class="w-1/4 self-center rounded-full"
        alt="Yurb's profile image",
        width="200",
        height="200"
      />

      <div class="flex flex-col gap-8">
        <h1 class="text-3xl text-neutral-100">
          {presentation.title}
        </h1>

        <h2
          class="w-auto max-w-[60ch] leading-6"
          set:html={convertAsteriskToStrongTag(presentation.description)}
        />

        <SocialLinks />
      </div>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Latest posts</h3>
        <Link href="/posts" label="See all posts" isUnderline target="_self" />
      </header>
      {posts.length === 0 && <p>Soon, stay connected üëÄ...</p>}

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .map((post) => (
                <PostCard
                  publishedAt={new Date(post?.published_at)}
                  title={post.title}
                  description={post.description}
                  id={post.id}
                />
              ))
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
          Selected projects ({projects.length})
        </h3>
      </header>
      {projects.length === 0 && <p>Oops, I must work üêô</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Get in touch</h3>
      </header>
      <p>
        Email me at <Link
          href={`mailto:${presentation.mail}`}
          label={presentation.mail}
        /> or follow me via my social links.
      </p>

      <SocialLinks />
    </article>
  </main>
</Layout>
